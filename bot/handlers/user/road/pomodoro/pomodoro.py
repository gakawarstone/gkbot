from typing import Any

from aiogram.types import ReplyKeyboardRemove

from services.pomodoro import Pomodoro as PomodoroService
from ._base import BaseHandler
from .restart import ask_to_restart


class PomodoroHandler(BaseHandler):
    async def handle(self) -> Any:
        if self.event.from_user is None:
            raise ValueError("from_user is None")

        await self.event.answer(
            "–í—ã –≤–∫–ª—é—á–∏–ª–∏ üïî <b>–ø–æ–º–∏–¥–æ—Ä</b>", reply_markup=ReplyKeyboardRemove()
        )

        await self.run_timer(
            time=(await self.settings).time_focused,
            greet_text="–£ –≤–∞—Å <i>15</i> –º–∏–Ω—É—Ç <b>–±—É–¥—å—Ç–µ —Å–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã</b>",
            timer_text="<i>–í–∂–∞—Ä–∏–≤–∞–π –ø–æ –ø–æ–ª–Ω–æ–π</i>",
        )

        await self.run_timer(
            time=(await self.settings).time_relax,
            greet_text="–¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–¥—ã—Ö <i>15 –º–∏–Ω—É—Ç</i>",
            timer_text="<i>–ù–∞ —á–∏–ª–µ</i>",
        )

        cnt = await PomodoroService.increment_today_stat(
            user_id=self.event.from_user.id
        )
        await self.event.answer(
            "<b>–ü–æ–∑–¥—Ä–∞–≤–ª—è—é</b> –≤—ã –ø–æ–ª—É—á–∏–ª–∏ <b>[<i>%s</i>üçÖ]</b>" % cnt
        )

        await ask_to_restart(self, "–•–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ–º–∏–¥–æ—Ä?")
